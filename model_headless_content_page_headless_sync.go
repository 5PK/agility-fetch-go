/*
Agility CMS REST API

Agility CMS REST API for retrieving content from the Agility CMS.  The API Types are fetch (for published content) and preview (for latest, or staging content).

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package agilitycms

import (
	"encoding/json"
)

// checks if the HeadlessContentPageHeadlessSync type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HeadlessContentPageHeadlessSync{}

// HeadlessContentPageHeadlessSync struct for HeadlessContentPageHeadlessSync
type HeadlessContentPageHeadlessSync struct {
	SyncToken *int64 `json:"syncToken,omitempty"`
	Items []HeadlessContentPage `json:"items,omitempty"`
}

// NewHeadlessContentPageHeadlessSync instantiates a new HeadlessContentPageHeadlessSync object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeadlessContentPageHeadlessSync() *HeadlessContentPageHeadlessSync {
	this := HeadlessContentPageHeadlessSync{}
	return &this
}

// NewHeadlessContentPageHeadlessSyncWithDefaults instantiates a new HeadlessContentPageHeadlessSync object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeadlessContentPageHeadlessSyncWithDefaults() *HeadlessContentPageHeadlessSync {
	this := HeadlessContentPageHeadlessSync{}
	return &this
}

// GetSyncToken returns the SyncToken field value if set, zero value otherwise.
func (o *HeadlessContentPageHeadlessSync) GetSyncToken() int64 {
	if o == nil || IsNil(o.SyncToken) {
		var ret int64
		return ret
	}
	return *o.SyncToken
}

// GetSyncTokenOk returns a tuple with the SyncToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeadlessContentPageHeadlessSync) GetSyncTokenOk() (*int64, bool) {
	if o == nil || IsNil(o.SyncToken) {
		return nil, false
	}
	return o.SyncToken, true
}

// HasSyncToken returns a boolean if a field has been set.
func (o *HeadlessContentPageHeadlessSync) HasSyncToken() bool {
	if o != nil && !IsNil(o.SyncToken) {
		return true
	}

	return false
}

// SetSyncToken gets a reference to the given int64 and assigns it to the SyncToken field.
func (o *HeadlessContentPageHeadlessSync) SetSyncToken(v int64) {
	o.SyncToken = &v
}

// GetItems returns the Items field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeadlessContentPageHeadlessSync) GetItems() []HeadlessContentPage {
	if o == nil {
		var ret []HeadlessContentPage
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeadlessContentPageHeadlessSync) GetItemsOk() ([]HeadlessContentPage, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *HeadlessContentPageHeadlessSync) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []HeadlessContentPage and assigns it to the Items field.
func (o *HeadlessContentPageHeadlessSync) SetItems(v []HeadlessContentPage) {
	o.Items = v
}

func (o HeadlessContentPageHeadlessSync) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HeadlessContentPageHeadlessSync) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SyncToken) {
		toSerialize["syncToken"] = o.SyncToken
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	return toSerialize, nil
}

type NullableHeadlessContentPageHeadlessSync struct {
	value *HeadlessContentPageHeadlessSync
	isSet bool
}

func (v NullableHeadlessContentPageHeadlessSync) Get() *HeadlessContentPageHeadlessSync {
	return v.value
}

func (v *NullableHeadlessContentPageHeadlessSync) Set(val *HeadlessContentPageHeadlessSync) {
	v.value = val
	v.isSet = true
}

func (v NullableHeadlessContentPageHeadlessSync) IsSet() bool {
	return v.isSet
}

func (v *NullableHeadlessContentPageHeadlessSync) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeadlessContentPageHeadlessSync(val *HeadlessContentPageHeadlessSync) *NullableHeadlessContentPageHeadlessSync {
	return &NullableHeadlessContentPageHeadlessSync{value: val, isSet: true}
}

func (v NullableHeadlessContentPageHeadlessSync) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeadlessContentPageHeadlessSync) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


