/*
Agility CMS REST API

Agility CMS REST API for retrieving content from the Agility CMS.  The API Types are fetch (for published content) and preview (for latest, or staging content).

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package agilitycms

import (
	"encoding/json"
)

// checks if the HeadlessGallery type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HeadlessGallery{}

// HeadlessGallery struct for HeadlessGallery
type HeadlessGallery struct {
	// Gallery ID.
	GalleryId *int32 `json:"galleryId,omitempty"`
	// Gallery name.
	Name NullableString `json:"name,omitempty"`
	// Gallery description.
	Description NullableString `json:"description,omitempty"`
	// List of Media items in gallery.
	Media []HeadlessMediaItem `json:"media,omitempty"`
	Count *int32 `json:"count,omitempty"`
}

// NewHeadlessGallery instantiates a new HeadlessGallery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeadlessGallery() *HeadlessGallery {
	this := HeadlessGallery{}
	return &this
}

// NewHeadlessGalleryWithDefaults instantiates a new HeadlessGallery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeadlessGalleryWithDefaults() *HeadlessGallery {
	this := HeadlessGallery{}
	return &this
}

// GetGalleryId returns the GalleryId field value if set, zero value otherwise.
func (o *HeadlessGallery) GetGalleryId() int32 {
	if o == nil || IsNil(o.GalleryId) {
		var ret int32
		return ret
	}
	return *o.GalleryId
}

// GetGalleryIdOk returns a tuple with the GalleryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeadlessGallery) GetGalleryIdOk() (*int32, bool) {
	if o == nil || IsNil(o.GalleryId) {
		return nil, false
	}
	return o.GalleryId, true
}

// HasGalleryId returns a boolean if a field has been set.
func (o *HeadlessGallery) HasGalleryId() bool {
	if o != nil && !IsNil(o.GalleryId) {
		return true
	}

	return false
}

// SetGalleryId gets a reference to the given int32 and assigns it to the GalleryId field.
func (o *HeadlessGallery) SetGalleryId(v int32) {
	o.GalleryId = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeadlessGallery) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeadlessGallery) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *HeadlessGallery) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *HeadlessGallery) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *HeadlessGallery) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *HeadlessGallery) UnsetName() {
	o.Name.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeadlessGallery) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeadlessGallery) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *HeadlessGallery) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *HeadlessGallery) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *HeadlessGallery) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *HeadlessGallery) UnsetDescription() {
	o.Description.Unset()
}

// GetMedia returns the Media field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeadlessGallery) GetMedia() []HeadlessMediaItem {
	if o == nil {
		var ret []HeadlessMediaItem
		return ret
	}
	return o.Media
}

// GetMediaOk returns a tuple with the Media field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeadlessGallery) GetMediaOk() ([]HeadlessMediaItem, bool) {
	if o == nil || IsNil(o.Media) {
		return nil, false
	}
	return o.Media, true
}

// HasMedia returns a boolean if a field has been set.
func (o *HeadlessGallery) HasMedia() bool {
	if o != nil && !IsNil(o.Media) {
		return true
	}

	return false
}

// SetMedia gets a reference to the given []HeadlessMediaItem and assigns it to the Media field.
func (o *HeadlessGallery) SetMedia(v []HeadlessMediaItem) {
	o.Media = v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *HeadlessGallery) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HeadlessGallery) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *HeadlessGallery) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *HeadlessGallery) SetCount(v int32) {
	o.Count = &v
}

func (o HeadlessGallery) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HeadlessGallery) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GalleryId) {
		toSerialize["galleryId"] = o.GalleryId
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Media != nil {
		toSerialize["media"] = o.Media
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	return toSerialize, nil
}

type NullableHeadlessGallery struct {
	value *HeadlessGallery
	isSet bool
}

func (v NullableHeadlessGallery) Get() *HeadlessGallery {
	return v.value
}

func (v *NullableHeadlessGallery) Set(val *HeadlessGallery) {
	v.value = val
	v.isSet = true
}

func (v NullableHeadlessGallery) IsSet() bool {
	return v.isSet
}

func (v *NullableHeadlessGallery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeadlessGallery(val *HeadlessGallery) *NullableHeadlessGallery {
	return &NullableHeadlessGallery{value: val, isSet: true}
}

func (v NullableHeadlessGallery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeadlessGallery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


