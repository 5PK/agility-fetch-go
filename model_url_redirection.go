/*
Agility CMS REST API

Agility CMS REST API for retrieving content from the Agility CMS.  The API Types are fetch (for published content) and preview (for latest, or staging content).

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package agilitycms

import (
	"encoding/json"
)

// checks if the UrlRedirection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UrlRedirection{}

// UrlRedirection struct for UrlRedirection
type UrlRedirection struct {
	Id *int32 `json:"id,omitempty"`
	OriginUrl NullableString `json:"originUrl,omitempty"`
	DestinationUrl NullableString `json:"destinationUrl,omitempty"`
	StatusCode *int32 `json:"statusCode,omitempty"`
}

// NewUrlRedirection instantiates a new UrlRedirection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUrlRedirection() *UrlRedirection {
	this := UrlRedirection{}
	return &this
}

// NewUrlRedirectionWithDefaults instantiates a new UrlRedirection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUrlRedirectionWithDefaults() *UrlRedirection {
	this := UrlRedirection{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UrlRedirection) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UrlRedirection) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UrlRedirection) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *UrlRedirection) SetId(v int32) {
	o.Id = &v
}

// GetOriginUrl returns the OriginUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UrlRedirection) GetOriginUrl() string {
	if o == nil || IsNil(o.OriginUrl.Get()) {
		var ret string
		return ret
	}
	return *o.OriginUrl.Get()
}

// GetOriginUrlOk returns a tuple with the OriginUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UrlRedirection) GetOriginUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OriginUrl.Get(), o.OriginUrl.IsSet()
}

// HasOriginUrl returns a boolean if a field has been set.
func (o *UrlRedirection) HasOriginUrl() bool {
	if o != nil && o.OriginUrl.IsSet() {
		return true
	}

	return false
}

// SetOriginUrl gets a reference to the given NullableString and assigns it to the OriginUrl field.
func (o *UrlRedirection) SetOriginUrl(v string) {
	o.OriginUrl.Set(&v)
}
// SetOriginUrlNil sets the value for OriginUrl to be an explicit nil
func (o *UrlRedirection) SetOriginUrlNil() {
	o.OriginUrl.Set(nil)
}

// UnsetOriginUrl ensures that no value is present for OriginUrl, not even an explicit nil
func (o *UrlRedirection) UnsetOriginUrl() {
	o.OriginUrl.Unset()
}

// GetDestinationUrl returns the DestinationUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UrlRedirection) GetDestinationUrl() string {
	if o == nil || IsNil(o.DestinationUrl.Get()) {
		var ret string
		return ret
	}
	return *o.DestinationUrl.Get()
}

// GetDestinationUrlOk returns a tuple with the DestinationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UrlRedirection) GetDestinationUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DestinationUrl.Get(), o.DestinationUrl.IsSet()
}

// HasDestinationUrl returns a boolean if a field has been set.
func (o *UrlRedirection) HasDestinationUrl() bool {
	if o != nil && o.DestinationUrl.IsSet() {
		return true
	}

	return false
}

// SetDestinationUrl gets a reference to the given NullableString and assigns it to the DestinationUrl field.
func (o *UrlRedirection) SetDestinationUrl(v string) {
	o.DestinationUrl.Set(&v)
}
// SetDestinationUrlNil sets the value for DestinationUrl to be an explicit nil
func (o *UrlRedirection) SetDestinationUrlNil() {
	o.DestinationUrl.Set(nil)
}

// UnsetDestinationUrl ensures that no value is present for DestinationUrl, not even an explicit nil
func (o *UrlRedirection) UnsetDestinationUrl() {
	o.DestinationUrl.Unset()
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *UrlRedirection) GetStatusCode() int32 {
	if o == nil || IsNil(o.StatusCode) {
		var ret int32
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UrlRedirection) GetStatusCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.StatusCode) {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *UrlRedirection) HasStatusCode() bool {
	if o != nil && !IsNil(o.StatusCode) {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given int32 and assigns it to the StatusCode field.
func (o *UrlRedirection) SetStatusCode(v int32) {
	o.StatusCode = &v
}

func (o UrlRedirection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UrlRedirection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.OriginUrl.IsSet() {
		toSerialize["originUrl"] = o.OriginUrl.Get()
	}
	if o.DestinationUrl.IsSet() {
		toSerialize["destinationUrl"] = o.DestinationUrl.Get()
	}
	if !IsNil(o.StatusCode) {
		toSerialize["statusCode"] = o.StatusCode
	}
	return toSerialize, nil
}

type NullableUrlRedirection struct {
	value *UrlRedirection
	isSet bool
}

func (v NullableUrlRedirection) Get() *UrlRedirection {
	return v.value
}

func (v *NullableUrlRedirection) Set(val *UrlRedirection) {
	v.value = val
	v.isSet = true
}

func (v NullableUrlRedirection) IsSet() bool {
	return v.isSet
}

func (v *NullableUrlRedirection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUrlRedirection(val *UrlRedirection) *NullableUrlRedirection {
	return &NullableUrlRedirection{value: val, isSet: true}
}

func (v NullableUrlRedirection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUrlRedirection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


