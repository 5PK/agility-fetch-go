/*
Agility CMS REST API

Testing ItemAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package agilitycms

import (
	"context"
	"fmt"
	"os"
	"path/filepath"
	"strconv"
	"testing"
	"github.com/joho/godotenv"
	agilityClient "github.com/5PK/agility-fetch-go"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_agilitycms_ItemAPIService(t *testing.T) {
	// Load .env file
	envPath := filepath.Join("..", ".env")
	err := godotenv.Load(envPath)
	require.NoError(t, err, "Failed to load .env file")

	// Get API key from environment
	apiKey := os.Getenv("API_KEY")
	id, err := strconv.Atoi(os.Getenv("TEST_ITEM_ID"))
	if err != nil {
		fmt.Println("Error converting string:", err)
		return
	}

	guid := os.Getenv("GUID")

	require.NotEmpty(t, apiKey, "API_KEY environment variable is required")

	configuration := agilityClient.NewConfiguration()
	configuration.AddDefaultHeader("APIKey", apiKey)
	configuration.Servers = agilityClient.ServerConfigurations{
		{
			URL:         "https://api.aglty.io",
			Description: "Agility CMS API Server",
		},
	}

	apiClient := agilityClient.NewAPIClient(configuration)

	t.Run("Test ItemAPIService ItemIdGet", func(t *testing.T) {

		apitype := agilityClient.FETCH
		locale := "en-us"

		resp, httpRes, err := apiClient.ItemAPI.ItemIdGet(context.Background(), guid, apitype, locale, int32(id)).Execute()

		fmt.Println(httpRes.StatusCode)
		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
