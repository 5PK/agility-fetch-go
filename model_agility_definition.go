/*
Agility CMS REST API

Agility CMS REST API for retrieving content from the Agility CMS.  The API Types are fetch (for published content) and preview (for latest, or staging content).

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package agilitycms

import (
	"encoding/json"
	 
)

// checks if the AgilityDefinition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgilityDefinition{}

// AgilityDefinition struct for AgilityDefinition
type AgilityDefinition struct {
	Id NullableString `json:"id,omitempty"`
	ModelId *int32 `json:"modelId,omitempty"`
	Guid NullableString `json:"guid,omitempty"`
	LastModifiedDate *string `json:"lastModifiedDate,omitempty"`
	DisplayName NullableString `json:"displayName,omitempty"`
	ReferenceName NullableString `json:"referenceName,omitempty"`
	Name NullableString `json:"name,omitempty"`
	ContentReferenceNames []string `json:"contentReferenceNames,omitempty"`
	Fields []AgilityField `json:"fields,omitempty"`
}

// NewAgilityDefinition instantiates a new AgilityDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgilityDefinition() *AgilityDefinition {
	this := AgilityDefinition{}
	return &this
}

// NewAgilityDefinitionWithDefaults instantiates a new AgilityDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgilityDefinitionWithDefaults() *AgilityDefinition {
	this := AgilityDefinition{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgilityDefinition) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgilityDefinition) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *AgilityDefinition) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *AgilityDefinition) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *AgilityDefinition) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *AgilityDefinition) UnsetId() {
	o.Id.Unset()
}

// GetModelId returns the ModelId field value if set, zero value otherwise.
func (o *AgilityDefinition) GetModelId() int32 {
	if o == nil || IsNil(o.ModelId) {
		var ret int32
		return ret
	}
	return *o.ModelId
}

// GetModelIdOk returns a tuple with the ModelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgilityDefinition) GetModelIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ModelId) {
		return nil, false
	}
	return o.ModelId, true
}

// HasModelId returns a boolean if a field has been set.
func (o *AgilityDefinition) HasModelId() bool {
	if o != nil && !IsNil(o.ModelId) {
		return true
	}

	return false
}

// SetModelId gets a reference to the given int32 and assigns it to the ModelId field.
func (o *AgilityDefinition) SetModelId(v int32) {
	o.ModelId = &v
}

// GetGuid returns the Guid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgilityDefinition) GetGuid() string {
	if o == nil || IsNil(o.Guid.Get()) {
		var ret string
		return ret
	}
	return *o.Guid.Get()
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgilityDefinition) GetGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Guid.Get(), o.Guid.IsSet()
}

// HasGuid returns a boolean if a field has been set.
func (o *AgilityDefinition) HasGuid() bool {
	if o != nil && o.Guid.IsSet() {
		return true
	}

	return false
}

// SetGuid gets a reference to the given NullableString and assigns it to the Guid field.
func (o *AgilityDefinition) SetGuid(v string) {
	o.Guid.Set(&v)
}
// SetGuidNil sets the value for Guid to be an explicit nil
func (o *AgilityDefinition) SetGuidNil() {
	o.Guid.Set(nil)
}

// UnsetGuid ensures that no value is present for Guid, not even an explicit nil
func (o *AgilityDefinition) UnsetGuid() {
	o.Guid.Unset()
}

// GetLastModifiedDate returns the LastModifiedDate field value if set, zero value otherwise.
func (o *AgilityDefinition) GetLastModifiedDate() string {
	if o == nil || IsNil(o.LastModifiedDate) {
		var ret string
		return ret
	}
	return *o.LastModifiedDate
}

// GetLastModifiedDateOk returns a tuple with the LastModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgilityDefinition) GetLastModifiedDateOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedDate) {
		return nil, false
	}
	return o.LastModifiedDate, true
}

// HasLastModifiedDate returns a boolean if a field has been set.
func (o *AgilityDefinition) HasLastModifiedDate() bool {
	if o != nil && !IsNil(o.LastModifiedDate) {
		return true
	}

	return false
}

// SetLastModifiedDate gets a reference to the given string and assigns it to the LastModifiedDate field.
func (o *AgilityDefinition) SetLastModifiedDate(v string) {
	o.LastModifiedDate = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgilityDefinition) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName.Get()) {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgilityDefinition) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *AgilityDefinition) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *AgilityDefinition) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *AgilityDefinition) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *AgilityDefinition) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetReferenceName returns the ReferenceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgilityDefinition) GetReferenceName() string {
	if o == nil || IsNil(o.ReferenceName.Get()) {
		var ret string
		return ret
	}
	return *o.ReferenceName.Get()
}

// GetReferenceNameOk returns a tuple with the ReferenceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgilityDefinition) GetReferenceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReferenceName.Get(), o.ReferenceName.IsSet()
}

// HasReferenceName returns a boolean if a field has been set.
func (o *AgilityDefinition) HasReferenceName() bool {
	if o != nil && o.ReferenceName.IsSet() {
		return true
	}

	return false
}

// SetReferenceName gets a reference to the given NullableString and assigns it to the ReferenceName field.
func (o *AgilityDefinition) SetReferenceName(v string) {
	o.ReferenceName.Set(&v)
}
// SetReferenceNameNil sets the value for ReferenceName to be an explicit nil
func (o *AgilityDefinition) SetReferenceNameNil() {
	o.ReferenceName.Set(nil)
}

// UnsetReferenceName ensures that no value is present for ReferenceName, not even an explicit nil
func (o *AgilityDefinition) UnsetReferenceName() {
	o.ReferenceName.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgilityDefinition) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgilityDefinition) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *AgilityDefinition) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *AgilityDefinition) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *AgilityDefinition) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *AgilityDefinition) UnsetName() {
	o.Name.Unset()
}

// GetContentReferenceNames returns the ContentReferenceNames field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgilityDefinition) GetContentReferenceNames() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ContentReferenceNames
}

// GetContentReferenceNamesOk returns a tuple with the ContentReferenceNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgilityDefinition) GetContentReferenceNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.ContentReferenceNames) {
		return nil, false
	}
	return o.ContentReferenceNames, true
}

// HasContentReferenceNames returns a boolean if a field has been set.
func (o *AgilityDefinition) HasContentReferenceNames() bool {
	if o != nil && !IsNil(o.ContentReferenceNames) {
		return true
	}

	return false
}

// SetContentReferenceNames gets a reference to the given []string and assigns it to the ContentReferenceNames field.
func (o *AgilityDefinition) SetContentReferenceNames(v []string) {
	o.ContentReferenceNames = v
}

// GetFields returns the Fields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AgilityDefinition) GetFields() []AgilityField {
	if o == nil {
		var ret []AgilityField
		return ret
	}
	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AgilityDefinition) GetFieldsOk() ([]AgilityField, bool) {
	if o == nil || IsNil(o.Fields) {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *AgilityDefinition) HasFields() bool {
	if o != nil && !IsNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given []AgilityField and assigns it to the Fields field.
func (o *AgilityDefinition) SetFields(v []AgilityField) {
	o.Fields = v
}

func (o AgilityDefinition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgilityDefinition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if !IsNil(o.ModelId) {
		toSerialize["modelId"] = o.ModelId
	}
	if o.Guid.IsSet() {
		toSerialize["guid"] = o.Guid.Get()
	}
	if !IsNil(o.LastModifiedDate) {
		toSerialize["lastModifiedDate"] = o.LastModifiedDate
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.ReferenceName.IsSet() {
		toSerialize["referenceName"] = o.ReferenceName.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.ContentReferenceNames != nil {
		toSerialize["contentReferenceNames"] = o.ContentReferenceNames
	}
	if o.Fields != nil {
		toSerialize["fields"] = o.Fields
	}
	return toSerialize, nil
}

type NullableAgilityDefinition struct {
	value *AgilityDefinition
	isSet bool
}

func (v NullableAgilityDefinition) Get() *AgilityDefinition {
	return v.value
}

func (v *NullableAgilityDefinition) Set(val *AgilityDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableAgilityDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableAgilityDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgilityDefinition(val *AgilityDefinition) *NullableAgilityDefinition {
	return &NullableAgilityDefinition{value: val, isSet: true}
}

func (v NullableAgilityDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgilityDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


