/*
Agility CMS REST API

Agility CMS REST API for retrieving content from the Agility CMS.  The API Types are fetch (for published content) and preview (for latest, or staging content).

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package agilitycms

import (
	"encoding/json"
)

// checks if the NotFoundResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotFoundResult{}

// NotFoundResult struct for NotFoundResult
type NotFoundResult struct {
	StatusCode *int32 `json:"statusCode,omitempty"`
}

// NewNotFoundResult instantiates a new NotFoundResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotFoundResult() *NotFoundResult {
	this := NotFoundResult{}
	return &this
}

// NewNotFoundResultWithDefaults instantiates a new NotFoundResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotFoundResultWithDefaults() *NotFoundResult {
	this := NotFoundResult{}
	return &this
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *NotFoundResult) GetStatusCode() int32 {
	if o == nil || IsNil(o.StatusCode) {
		var ret int32
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotFoundResult) GetStatusCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.StatusCode) {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *NotFoundResult) HasStatusCode() bool {
	if o != nil && !IsNil(o.StatusCode) {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given int32 and assigns it to the StatusCode field.
func (o *NotFoundResult) SetStatusCode(v int32) {
	o.StatusCode = &v
}

func (o NotFoundResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotFoundResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StatusCode) {
		toSerialize["statusCode"] = o.StatusCode
	}
	return toSerialize, nil
}

type NullableNotFoundResult struct {
	value *NotFoundResult
	isSet bool
}

func (v NullableNotFoundResult) Get() *NotFoundResult {
	return v.value
}

func (v *NullableNotFoundResult) Set(val *NotFoundResult) {
	v.value = val
	v.isSet = true
}

func (v NullableNotFoundResult) IsSet() bool {
	return v.isSet
}

func (v *NullableNotFoundResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotFoundResult(val *NotFoundResult) *NullableNotFoundResult {
	return &NullableNotFoundResult{value: val, isSet: true}
}

func (v NullableNotFoundResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotFoundResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


