/*
Agility CMS REST API

Agility CMS REST API for retrieving content from the Agility CMS.  The API Types are fetch (for published content) and preview (for latest, or staging content).

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package agilitycms

import (
	"encoding/json"
)

// checks if the HeadlessContentItemSeo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HeadlessContentItemSeo{}

// HeadlessContentItemSeo struct for HeadlessContentItemSeo
type HeadlessContentItemSeo struct {
	// The meta description for this static/dynamic page.
	MetaDescription NullableString `json:"metaDescription,omitempty"`
	// The meta keywords for this static/dynamic page.
	MetaKeywords NullableString `json:"metaKeywords,omitempty"`
	// Additional markup to be included in the *head* element of the page.
	MetaHTML NullableString `json:"metaHTML,omitempty"`
}

// NewHeadlessContentItemSeo instantiates a new HeadlessContentItemSeo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeadlessContentItemSeo() *HeadlessContentItemSeo {
	this := HeadlessContentItemSeo{}
	return &this
}

// NewHeadlessContentItemSeoWithDefaults instantiates a new HeadlessContentItemSeo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeadlessContentItemSeoWithDefaults() *HeadlessContentItemSeo {
	this := HeadlessContentItemSeo{}
	return &this
}

// GetMetaDescription returns the MetaDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeadlessContentItemSeo) GetMetaDescription() string {
	if o == nil || IsNil(o.MetaDescription.Get()) {
		var ret string
		return ret
	}
	return *o.MetaDescription.Get()
}

// GetMetaDescriptionOk returns a tuple with the MetaDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeadlessContentItemSeo) GetMetaDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetaDescription.Get(), o.MetaDescription.IsSet()
}

// HasMetaDescription returns a boolean if a field has been set.
func (o *HeadlessContentItemSeo) HasMetaDescription() bool {
	if o != nil && o.MetaDescription.IsSet() {
		return true
	}

	return false
}

// SetMetaDescription gets a reference to the given NullableString and assigns it to the MetaDescription field.
func (o *HeadlessContentItemSeo) SetMetaDescription(v string) {
	o.MetaDescription.Set(&v)
}
// SetMetaDescriptionNil sets the value for MetaDescription to be an explicit nil
func (o *HeadlessContentItemSeo) SetMetaDescriptionNil() {
	o.MetaDescription.Set(nil)
}

// UnsetMetaDescription ensures that no value is present for MetaDescription, not even an explicit nil
func (o *HeadlessContentItemSeo) UnsetMetaDescription() {
	o.MetaDescription.Unset()
}

// GetMetaKeywords returns the MetaKeywords field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeadlessContentItemSeo) GetMetaKeywords() string {
	if o == nil || IsNil(o.MetaKeywords.Get()) {
		var ret string
		return ret
	}
	return *o.MetaKeywords.Get()
}

// GetMetaKeywordsOk returns a tuple with the MetaKeywords field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeadlessContentItemSeo) GetMetaKeywordsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetaKeywords.Get(), o.MetaKeywords.IsSet()
}

// HasMetaKeywords returns a boolean if a field has been set.
func (o *HeadlessContentItemSeo) HasMetaKeywords() bool {
	if o != nil && o.MetaKeywords.IsSet() {
		return true
	}

	return false
}

// SetMetaKeywords gets a reference to the given NullableString and assigns it to the MetaKeywords field.
func (o *HeadlessContentItemSeo) SetMetaKeywords(v string) {
	o.MetaKeywords.Set(&v)
}
// SetMetaKeywordsNil sets the value for MetaKeywords to be an explicit nil
func (o *HeadlessContentItemSeo) SetMetaKeywordsNil() {
	o.MetaKeywords.Set(nil)
}

// UnsetMetaKeywords ensures that no value is present for MetaKeywords, not even an explicit nil
func (o *HeadlessContentItemSeo) UnsetMetaKeywords() {
	o.MetaKeywords.Unset()
}

// GetMetaHTML returns the MetaHTML field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeadlessContentItemSeo) GetMetaHTML() string {
	if o == nil || IsNil(o.MetaHTML.Get()) {
		var ret string
		return ret
	}
	return *o.MetaHTML.Get()
}

// GetMetaHTMLOk returns a tuple with the MetaHTML field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeadlessContentItemSeo) GetMetaHTMLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetaHTML.Get(), o.MetaHTML.IsSet()
}

// HasMetaHTML returns a boolean if a field has been set.
func (o *HeadlessContentItemSeo) HasMetaHTML() bool {
	if o != nil && o.MetaHTML.IsSet() {
		return true
	}

	return false
}

// SetMetaHTML gets a reference to the given NullableString and assigns it to the MetaHTML field.
func (o *HeadlessContentItemSeo) SetMetaHTML(v string) {
	o.MetaHTML.Set(&v)
}
// SetMetaHTMLNil sets the value for MetaHTML to be an explicit nil
func (o *HeadlessContentItemSeo) SetMetaHTMLNil() {
	o.MetaHTML.Set(nil)
}

// UnsetMetaHTML ensures that no value is present for MetaHTML, not even an explicit nil
func (o *HeadlessContentItemSeo) UnsetMetaHTML() {
	o.MetaHTML.Unset()
}

func (o HeadlessContentItemSeo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HeadlessContentItemSeo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.MetaDescription.IsSet() {
		toSerialize["metaDescription"] = o.MetaDescription.Get()
	}
	if o.MetaKeywords.IsSet() {
		toSerialize["metaKeywords"] = o.MetaKeywords.Get()
	}
	if o.MetaHTML.IsSet() {
		toSerialize["metaHTML"] = o.MetaHTML.Get()
	}
	return toSerialize, nil
}

type NullableHeadlessContentItemSeo struct {
	value *HeadlessContentItemSeo
	isSet bool
}

func (v NullableHeadlessContentItemSeo) Get() *HeadlessContentItemSeo {
	return v.value
}

func (v *NullableHeadlessContentItemSeo) Set(val *HeadlessContentItemSeo) {
	v.value = val
	v.isSet = true
}

func (v NullableHeadlessContentItemSeo) IsSet() bool {
	return v.isSet
}

func (v *NullableHeadlessContentItemSeo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeadlessContentItemSeo(val *HeadlessContentItemSeo) *NullableHeadlessContentItemSeo {
	return &NullableHeadlessContentItemSeo{value: val, isSet: true}
}

func (v NullableHeadlessContentItemSeo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeadlessContentItemSeo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


